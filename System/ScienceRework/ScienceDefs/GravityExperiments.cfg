//These are for gravity expeiments, which go on the Gravioli Detector
//New Experiment Definitions for any custom SK experiments
EXPERIMENT_DEFINITION:NEEDS[FeatureScience]
{
	id = sk_orbitalPerturbationExperiment
	title = Orbital Perturbation Experiment
	baseValue = 250
	scienceCap = 250
	dataScale = 1
	
	RESULTS	
	{
		default = It seems like this planet's mass isn't uniformly distributed, and that
		default = Silly Jool! Stop messing with our orbit from so far away, you little prankster!
	}
}

//Defining the science values for the group
@KERBALISM_GROUP_SETTINGS:NEEDS[FeatureScience]
{
	SK_GravityExperiments
	{
		BaseSlots = 1

		sss_geodesicExperiments
		{
			ECCost = 0.075	
			size = 7669.62 						
			value = 35						
			SetupMass =
			SetupCost =			
			duration = 9203545 
			UnlockTech = science3
			requirements =
			ResourceRates =
			CrewRequirement =
			
		}
		gravityScan
		{
			ECCost = 0.075	
			size = 1620 						
			value = 11								
			duration = 1944000 	
			SetupMass =
			SetupCost =
			UnlockTech = science6
			requirements =
			ResourceRates =
			CrewRequirement = 
		}
		sk_orbitalPerturbationExperiment
		{
			ECCost = 0.075	
			size = 76696.2696 						
			value = 250			
			SetupMass =
			SetupCost =			
			duration = 92035450 
			UnlockTech = science6
			requirements = OrbitMinInclination:50,OrbitMaxInclination:130 
			ResourceRates =
			CrewRequirement = 
		}
	}
}

//Patching the Kerbalism values into the experiments
@EXPERIMENT_DEFINITION:HAS[#id[sss_geodesicExperiments]]:NEEDS[FeatureScience]:FOR[SkyhawkKerbalism]
{
	@baseValue = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/value$
	@dataScale = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/size$
	@dataScale /= #$baseValue$

	KERBALISM_EXPERIMENT
	{
		Situation = InSpace
		BodyNotAllowed = Suns
	}
}
@EXPERIMENT_DEFINITION:HAS[#id[gravityScan]]:NEEDS[FeatureScience]:FOR[SkyhawkKerbalism]
{
	@baseValue = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/value$
	@dataScale = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/size$
	@dataScale /= #$baseValue$

	KERBALISM_EXPERIMENT
	{
		Situation = InSpaceHigh@Biomes
		Situation = InSpaceLow
		Situation = Surface
	}
}
@EXPERIMENT_DEFINITION:HAS[#id[sk_orbitalPerturbationExperiment]]:NEEDS[FeatureScience]:FOR[SkyhawkKerbalism]
{
	@baseValue = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/value$
	@dataScale = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/size$
	@dataScale /= #$baseValue$

	KERBALISM_EXPERIMENT
	{
		Situation = InSpace
	}
}

//Creating the patching tag and applying it to the stock part
@PART[sensorGravimeter]:NEEDS[FeatureScience]:FIRST
{
	%SK_GravityExperiments = True
}

//Applying the Configure module to the tagged parts
@PART[*]:HAS[#SK_GravityExperiments[True]]:NEEDS[FeatureScience]
{
//adding the experiment modules. The other parameters get added/overwritten later, thus it's pointless to add them here.
	MODULE
	{
		name = Experiment
		experiment_id = sss_geodesicExperiments
	}
	!MODULE[Experiment]:HAS[#experiment_id[gravityScan]]	
	MODULE
	{
		name = Experiment
		experiment_id = gravityScan
	}
	MODULE
	{
		name = Experiment
		experiment_id = sk_orbitalPerturbationExperiment
	}

// ============================================================================
// Adding the Configure module to handle the experiment selection, together with
// the corresponding setups.
	MODULE
	{
		name = Configure
		title = Gravity Experiments
		slots = 1
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}
		SETUP
		{
			name = Geodesic Experiments
			desc = Installs a suite of instruments which can help to accurately measure the overall geometrical shape and gravity field of planets.
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = sss_geodesicExperiments
			}

		}
		SETUP
		{
			name = Gravity Scan
			desc = Installs a negative Gravioli detector on the spacecraft to search for the prescense of negative Gravioli particles around a body. DO NOT ATTEMPT TO FIND POSITIVE GRAVIOLI PARTICLES WITH THIS EXPERIMENT!!!
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = gravityScan
			}
		}
		SETUP
		{
			name = Orbital Perturbation Experiment
			desc = Installs a set of incredibly accurate positioning devices which can allow ground stations to track how masscons within the planet and the gravitational pull of distant objects affect the probe's orbit over time
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = sk_orbitalPerturbationExperiment
			}
		}
	}
}

//Adding the experiment traits to the Configure module.
@PART[*]:HAS[@MODULE[Configure]:HAS[#title[Gravity?Experiments]]]:NEEDS[FeatureScience]:FOR[KerbalismSkyhawk]
{
	@MODULE[Configure]:HAS[#title[Gravity?Experiments]]
	{
		%slots = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/BaseSlots$
		%reconfigure = false

		@SETUP:HAS[#name[Geodesic?Experiments]]
		{
			%tech = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/UnlockTech$
			%mass = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/SetupMass$
			%cost = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/SetupCost$
		}
		
		@SETUP:HAS[#name[Gravity?Scan]]
		{
			%tech = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/UnlockTech$
			%mass = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/SetupMass$
			%cost = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/SetupCost$
		}
		
		@SETUP:HAS[#name[Orbital?Perturbation?Experiment]]
		{
			%tech = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/UnlockTech$
			%mass = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/SetupMass$
			%cost = #$../../@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/SetupCost$
		}		
	}

	@MODULE[Experiment]:HAS[#experiment_id[sss_geodesicExperiments]]
	{
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/ECCost$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/CrewRequirement$
		%requires = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sss_geodesicExperiments/ResourceRates$
	}
	
	@MODULE[Experiment]:HAS[#experiment_id[gravityScan]]
	{
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/ECCost$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/CrewRequirement$
		%requires = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/gravityScan/ResourceRates$
	}
	
	@MODULE[Experiment]:HAS[#experiment_id[sk_orbitalPerturbationExperiment]]
	{
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/ECCost$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/CrewRequirement$
		%requires = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/SK_GravityExperiments/sk_orbitalPerturbationExperiment/ResourceRates$
	}
}