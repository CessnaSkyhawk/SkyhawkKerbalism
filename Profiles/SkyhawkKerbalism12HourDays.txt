// ============================================================================
//JNSQ has a 12-hour day rather than a 6 hour day, and a 365 day year rather than a 426 day year, so it requires some changes to make sure balance is still correct
//Stock KSP Day Length - 21600
//JNSQ Day Length - 43200
//Conversion Factor = 0.5
//Stock KSP Year Length - 9203545
//JNSQ Year Length - 15768000
//Conversion Factor = 9203545/15768000 = 0.58368499492
// ============================================================================

Profile
{
	name = Skyhawk

	/////////////
	//Resources//
	/////////////

		Supply
		{
			resource = ElectricCharge
			on_eva = 33.0
			on_rescue = 10000.0
			low_message = $VESSEL batteries are almost empty@<i>We are squeezing the last bit of juice</i>|$VESSEL batteries are almost empty@<i>Shutting down non-essential systems</i>
			empty_message = There is no more ElectricCharge on $VESSEL@<i>Life support systems are off</i>|There is no more ElectricCharge on $VESSEL@<i>We lost control</i>
			refill_message = $VESSEL batteries recharged@<i>The crew is allowed music again</i>|$VESSEL batteries recharged@<i>Systems are back online</i>
		}
     
		Supply
		{
			resource = Food
			on_pod = 5    // 5 days
			on_rescue = 8  // 8 days
			low_message = Food reserves are getting low on $VESSEL@<i>Anything edible is being scrutinized</i>
			empty_message = There is no more food on $VESSEL@<i>The crew prepare for the inevitable</i>
			refill_message = $VESSEL food reserves restored@<i>Double snack rations for everybody</i>
		}
     
		Supply
		{
			resource = Water
			on_pod = 10      // 5 days
			on_eva = 0.5 //1/4 day
			on_rescue = 16   // 8 days
			low_message = Water reserves are getting low on $VESSEL@<i>Hygiene schedule suspended until further notice</i>
			empty_message = There is no more water on $VESSEL@<i>Licking the condensate is not a viable solution</i>
			refill_message = $VESSEL water reserves restored@<i>The situation looks much better now</i>
		}
     
		Supply
		{
			resource = Oxygen
			on_pod = 180      // 5 days
			on_eva = 12    // 2 hrs
			on_rescue = 288   // 8 days
			low_message = Oxygen reserves are dangerously low on $VESSEL@<i>There is mild panic among the crew</i>
			empty_message = There is no more oxygen on $VESSEL@<i>Everybody hold your breath!</i>
			refill_message = $VESSEL oxygen reserves restored@<i>The crew is taking a breather</i>
		}
     
		Supply
		{
			resource = CarbonDioxide
			low_message = Carbon dioxide reserves are getting low on $VESSEL@<i>The plants on board look unhappy</i>
			empty_message = There is no more carbon dioxide on $VESSEL@<i>The plants on board have filed a formal complaint</i>
			refill_message = $VESSEL carbon dioxide reserves restored@<i>The plants on board are grateful</i>
		}
     
		Supply
		{
			resource = LithiumHydroxide
			low_message = $VESSEL@'s CO2 scrubbers are wearing out!@<i>Soon there will be no way to capture CO2...</i>
			empty_message = $VESSEL's scrubbers have worn out!@<i>The crew is starting to feel lightheaded...</i>
			refill_message = $VESSEL's scrubbers have been replaced@<i>Normal operations can resume</i>
		}	 
	 
		Supply
		{
			resource = Nitrogen
			on_rescue = 100.0
			low_message = Nitrogen reserves are getting low on $VESSEL<i>I hope everybody brought their space suits!</i>
			empty_message = There is no more nitrogen on $VESSEL@<i>Time to go back in the suits</i>
			refill_message = $VESSEL nitrogen reserves restored@<i>Let's get out of these damn suits</i>
		}
     
		Supply
		{
            resource = Hydrogen
            low_message = Hydrogen tanks are almost empty on $VESSEL
            empty_message = There is no more hydrogen on $VESSEL tanks
			refill_message = $VESSEL's hydrogen tanks have been refilled
		}
     
		Supply
		{
            resource = Ammonia
            low_message = Ammonia tanks are almost empty on $VESSEL
            empty_message = There is no more ammonia in $VESSEL's tanks@<i>Maybe it's time for some smelly alternatives</i>
            refill_message = $VESSEL's ammonia tanks have been refilled
		}
       
		Supply
		{
            resource = LiquidFuel
            low_message = Kerosene tanks are almost empty on $VESSEL
            empty_message = There is no more kerosene in $VESSEL's tanks.@<i>Time to get out and push!</i>|There is no more kerosene in $VESSEL's tanks.@<i>Look's like its time for the Manley Manuver!</i>
            refill_message = $VESSEL's kerosene tanks have been refilled
		} 
       
		Supply
		{
            resource = Oxidizer
            low_message = LOX tanks are almost empty on $VESSEL
            empty_message = There is no more LOX in $VESSEL's tanks.@<i>Did you forget about boiloff?</i>
            refill_message = $VESSEL's LOX tanks have been refilled
		} 
       
		Supply
		{
            resource = LqdHydrogen
            low_message = LH2 tanks are almost empty on $VESSEL
            empty_message = There is no more LH2 in $VESSEL's tanks.@<i>Did you forget about boiloff?</i>
            refill_message = $VESSEL's LH2 tanks have been refilled
		}  
		
		Supply
		{
            resource = LqdMethane
            low_message = Liquid methane tanks are almost empty on $VESSEL
            empty_message = There is no more liquid methane in $VESSEL's tanks.@<i>Did you forget about boiloff?</i>
            refill_message = $VESSEL's liquid methane tanks have been refilled
		}  
     
		Supply
		{
            resource = Aerozine50
            low_message = Aerozine tanks are almost empty on $VESSEL
            empty_message = There is no more Aerozine in $VESSEL's tanks.@<i>It doesn't boil off, so what the heck happened to it?</i>
			refill_message = $VESSEL's Aerozine tanks have been refilled
       }
       
		Supply
		{
            resource = NitrogenTetroxide
            low_message = NTO tanks are almost empty on $VESSEL
            empty_message = There is no more NTO in $VESSEL's tanks.@<i>It doesn't boil off, so what the heck happened to it?</i>
            refill_message = $VESSEL's NTO tanks have been refilled
		}
       
		Supply
		{
            resource = MonoPropellant
            low_message = Hydrazine tanks are almost empty on $VESSEL
            empty_message = There is no more Hydrazine in $VESSEL's tanks.@<i>Looks like you won't be able to ullage today...</i>
            refill_message = $VESSEL's Hydrazine tanks have been refilled
		}
       
		Supply
		{
            resource = LqdNitrogen
            low_message = Liquid nitrogen tanks are almost empty on $VESSEL
            empty_message = There is no more liquid nitrogen in $VESSEL's tanks
            refill_message = $VESSEL's liquid nitrogen tanks have been refilled
		}
       
		Supply
		{
            resource = LqdAmmonia
            low_message = Liquid ammonian tanks are almost empty on $VESSEL
            empty_message = There is no more liquid ammonia in $VESSEL's tanks
            refill_message = $VESSEL's liquid ammonia tanks have been refilled
		}
       
		Supply
		{
            resource = LqdCO
            low_message = Liquid carbon monoxide tanks are almost empty on $VESSEL
            empty_message = There is no more liquid carbon monoxide in $VESSEL's tanks
            refill_message = $VESSEL's liquid carbon monoxide tanks have been refilled
		}  
       
		Supply
		{
            resource = LqdCO2
            low_message = Liquid carbon dioxide tanks are almost empty on $VESSEL
            empty_message = There is no more liquid carbon dioxide in $VESSEL's tanks
            refill_message = $VESSEL's liquid carbon dioxide tanks have been refilled
		} 
       
		Supply
		{
       	    resource = Hydrates
       	    low_message = Hydrates is almost depleted on $VESSEL@<i>Hydrate sifting will soon be unavailable</i>
       	    empty_message = There is no more Hydrates on $VESSEL@<i>Hydrate sifting is no longer available</i>
       	    refill_message = $VESSEL Hydrates storage refilled@<i>Hydrate sifting is available</i>
		}
       
		Supply
		{
     	    resource = Antimatter
     	    low_message = Antimatter tanks are almost empty on $VESSEL
     	    empty_message = There is no more antimatter on $VESSEL 
     	    refill_message = $VESSEL antimatter tanks refilled
		}  
       
		Supply
		{
       	    resource = LqdDeuterium
       	    low_message = LqdDeuterium is almost depleted on $VESSEL@<i>Fusion fuel processes will soon be unavailable</i>
       	    empty_message = There is no more LqdDeuterium on $VESSEL@<i>Fusion fuel processes are no longer available</i>
       	    refill_message = $VESSEL LqdDeuterium storage refilled@<i>Fusion fuel processes are available</i>
		}
       
		Supply
		{
       	    resource = LqdHe3
       	    low_message = LqdHe3 is almost depleted on $VESSEL@<i>Fusion fuel processes will soon be unavailable</i>
       	    empty_message = There is no more LqdHe3 on $VESSEL@<i>Fusion fuel processes are no longer available</i>
       	    refill_message = $VESSEL LqdHe3 storage refilled@<i>Fusion fuel processes are available</i>
		}
       
		Supply
		{
       	    resource = Rock
       	    low_message = Rock is almost depleted on $VESSEL@<i>Molten Regolith alternative processing will soon be unavailable</i>
       	    empty_message = There is no more Rock on $VESSEL@<i>Molten Regolith alternative processing is no longer available</i>
       	    refill_message = $VESSEL Rock storage refilled@<i>Molten Regolith alternative processing is available</i>
		}
       
		Supply
		{
       	    resource = Spodsumene
       	    low_message = Spodumene is almost depleted on $VESSEL@<i>Lithium sifting will soon be unavailable</i>
       	    empty_message = There is no more Spodumene on $VESSEL@<i>Lithium sifting is no longer available</i>
       	    refill_message = $VESSEL Spodumene storage refilled@<i>Lithium sifting is available</i>
		}
		
		Supply
		{
			resource = Uraninite
			low_message = Uraninite is almost depleted on $VESSEL@<i>Enriched Uranium production will soon be unavailable</i>
			empty_message = There is no more Uraninite on $VESSEL@<i>Enriched Uranium production is no longer available</i>
			refill_message = $VESSEL Uraninite storage refilled@<i>Enriched Uranium production is available</i>
		}

		Supply
		{
			resource = EnrichedUranium
			low_message = Enriched Uranium is almost depleted on $VESSEL@<i>Nuclear Reactors will shut down soon</i>
			empty_message = There is no more Enriched Uranium on $VESSEL@<i>Nuclear Reactors have shut down</i>
			refill_message = $VESSEL Enriched Uranium storage refilled@<i>Nuclear Reactors back online</i>
		}
       
	/////////
	//Rules//
	/////////
	   
		Rule
		{
			name = climatization
			title = #KERBALISM_RuleName_climatization
			input = ElectricCharge
			rate = 0.0001 // per-kelvin (temp diff), per m^3 (living space), per-second
			degeneration = 0.00000007 // about 2h at 100k temp diff in 20m^3
			modifier = temperature,volume,per_capita
			warning_message = #KERBALISM_climatization_warning
			danger_message = #KERBALISM_climatization_danger
			fatal_message = #KERBALISM_climatization_fatal
			relax_message = #KERBALISM_climatization_relax
		}
     
		Rule
		{
			name = eating
			title = #KERBALISM_RuleName_eating
			input = Food
			output = Waste
			rate = 0.5
			interval = 21600  // 2 meals per day - this value will vary based on day length
			individuality = 0.01
			degeneration = 0.03333333333 // 30 meals, or 15 days
			warning_message = #KERBALISM_food_warning
			danger_message = #KERBALISM_food_danger
			fatal_message = #KERBALISM_food_fatal
			relax_message = #KERBALISM_food_relax
		}
     
		Rule
		{
			name = drinking
			title = #KERBALISM_RuleName_drinking
			input = Water
			output = WasteWater
			rate = 0.5
			interval = 10800 // 4 drinks per day - this value will vary based on day length
			degeneration = 0.041665 // 12 drinks, or 3 days
			individuality = 0.01
			warning_message = #KERBALISM_water_warning
			danger_message = #KERBALISM_water_danger
			fatal_message = #KERBALISM_water_fatal
			relax_message = #KERBALISM_water_relax
		}
     
		Rule
		{
			 name = breathing
			 title = #KERBALISM_RuleName_breathing
			 input = Oxygen
			 output = WasteAtmosphere
			 rate = 0.00083333333 // Based on ISS figures of 0.84Kg/day. Kerbals use 1/16 of an astronauts use giving figures of 0.0525Kg/day. I modified it to a slightly lower value, so that six units of  oxygen are used per hour in stock KSP, or 36 units total per day - this value will vary based on day length
			 degeneration = 0.0055555 // 3 minutes
			 modifier = non_breathable
			 individuality = 0.01
			 warning_message = #KERBALISM_oxygen_warning
			 danger_message = #KERBALISM_oxygen_danger
			 fatal_message = #KERBALISM_oxygen_fatal
			 relax_message = #KERBALISM_oxygen_relax
		}
     
		Rule
		{
			name = co2 poisoning
			title = #KERBALISM_RuleName_co2poisoning
			degeneration = 0.0005555 // 30 minutes
			modifier = poisoning
			warning_threshold = 0.23
			warning_message = #KERBALISM_co2_warning
			danger_message = #KERBALISM_co2_danger
			fatal_message = #KERBALISM_co2_fatal
			relax_message = #KERBALISM_co2_relax
		}
     
		Rule
		{
			name = stress
			title = #KERBALISM_RuleName_stress
			degeneration = 0.000000002315 // 10000 days
			variance = 0.33 // add per-kerbal variance
			individuality = 0.1
			modifier = living_space,comfort,pressure
			breakdown = true // trigger breakdown event instead of death
			warning_message = #KERBALISM_stress_warning
			danger_message = #KERBALISM_stress_danger
			relax_message = #KERBALISM_stress_relax
		}
     
		Rule
		{
			name = radiation
			title = #KERBALISM_RuleName_radiation
			degeneration = 0.5 // just use the modifier
			variance = 0.1 // add per-kerbal variance
			individuality = 0.15
			lifetime = true // this is a life time value
			modifier = radiation,shielding
			warning_threshold = 25.0
			danger_threshold = 37.5
			fatal_threshold = 50.0
			warning_message = #KERBALISM_radiation_warning
			danger_message = #KERBALISM_radiation_danger
			fatal_message = #KERBALISM_radiation_fatal
			relax_message = #KERBALISM_radiation_relax
		}


	//Note - easiest way to modify rates based on varying day lengths is probably by changing the capacity values

	/////////////
	//Scrubbers//
	/////////////

	// convention: 1 capacity = enough to scrub output of 1 crew member for 1 day
	Process //Short-term scrubber for Mercury type missions - lasts about 7 days (enough for early low orbit ops - technically you could make it to the mun/moon and back, but it'll be VERY tight so it's a big risk)
	{
		name = basicLiOHScrubber
		title = Basic LiOH Scrubber
		modifier = _BasicLiOHScrubber
		input = WasteAtmosphere@0.000625 //Standard unit - equivalent to the amount of CO2 produced by one crew member every second, but rounded up slightly to allow for some variability
		input = LithiumHydroxide@0.00000330687  //Convention will be that 1 unit of LiOH is consumed every 7 days
	}

	Process //Long-term scrubber for Apollo type missions - lasts about 28 days (enough to easily do mun and back, and 	maybe barely make it back from Minmus)
	{
		name = advancedLiOHScrubber
		title = Advanced LiOH Scrubber
		modifier = _AdvancedLiOHScrubber
		input = WasteAtmosphere@0.000625
		// efficiency starts at 2 (2 x a pods scrubber), reaches 1 in 6h, then drops below
		input = LithiumHydroxide@0.00000330687 //1 unit consumed per 7 days, so 4 should be carried in total per crew member   
	}

	Process //Early regenerative scrubber - can handle half the capacity of a crew member infinetly, so it's useful for early stations, but not for small capsule-based missions
	{
		name = basicRegenerativeScrubber
		title = Basic Regenerative Scrubber
		modifier = _BasicRegenerativeScrubber
		input = ElectricCharge@0.025
		input = WasteAtmosphere@0.0003125
		output = CarbonDioxide@0.0003125
		dump = true
	}

	Process//Early regenerative scrubber - can handle full crew capacity, making it the most effective late game version
	{
		name = advancedRegenerativeScrubber
		title = Advanced Regenerative Scrubber
		modifier = _AdvancedRegenerativeScrubber
		input = ElectricCharge@0.025
		input = WasteAtmosphere@0.000625
		output = CarbonDioxide@0.000625
		dump = true
	}

	//////////////////
	//Pressurization//
	//////////////////

	// convention: 1 capacity = enough to compensate for leaks in 70 m² surface area (a cube of 40 m³ volume, edge length of 3.42 m) per crew member
	// = 0.00025624796502 N2 to replace the Atmosphere leaked via the atmo leaks process for the above approx needed surface area per crew member
	Process
	{
		name = pressure control
		title = #KERBALISM_Process_PressureControl
		modifier = _PressureControl,non_breathable
		input = ElectricCharge@0.00858
		input = Nitrogen@0.175  // Much higher than amount needed for leak control to allow speedier pressurization of low pressure habs and inflatables
		output = Atmosphere@0.175
	}

	// convention: When the vessel is in a breathable atmosphere, pressure control is automatically disabled and the air pump will pump air
	// into the vessel to maintain pressurization of any habitable areas, one example is inflating inflatable habitats without using any
	// N2 when a breathable atmosphere is present.
	Process
	{
		name = air pump
		title = #KERBALISM_Process_AirPump
		modifier = _AirPump,breathable
		input = ElectricCharge@0.00258
		output = Atmosphere@3.675
	}
	
	Process
	{
		name = atmo leaks
		title = #KERBALISM_Process_AtmoLeaks
		modifier = surface,non_breathable
		input = Atmosphere@0.000000949892841  // leakage of Atmosphere (N2) per second for a surface area of 1 m²
		// From ISS: see https://www.nasa.gov/pdf/179225main_ISS_Poster_Back.pdf and 	https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20110012997.pdf
		// 935 m³ volume, ~1105 m² surface (estimated), 0.227 Kg/day (structural)
		// Surface estimation: see the "Atmo Leak Estimation" spreadsheet in misc.
		// 1 Kerbin day is 1/4 of a human day so 0.227/4 = 0.05675 Kg/day
		// 0.05675 Kg/day over 1105 m² = 0.0513352488 (g/m²)/day.
		// Using the density of N2 from CRP we get 1.251 g/KSPunit = 0.0410353707 (unit/m²)/day
		// That divided over 21600 secs = 0.000001899785682 (unit/m²)/sec
	}

	///////////////////
	//Water and Waste//
	///////////////////

	// convention: 1 capacity = enough to recycle output of 1 crew member
	Process
	{
		name = water recycler
		title = #KERBALISM_Process_WaterRecycler
		modifier = _WaterRecycler
		input = ElectricCharge@0.0446
		input = WasteWater@0.00002314814
		output = Water@0.00001967592 // We are targeting about an 85% recovery rate, so this value should be 85% the waste water input.
		output = Ammonia@0.0000841805 
		output = CarbonDioxide@0.00003318155 //Both ammonia and CO2 ratios are based on the original ones from stock Kerbalism
		dump_valve = Water,Ammonia,CarbonDioxide,Water&Ammonia,Water&CarbonDioxide,Ammonia&CarbonDioxide
	}

	Process
	{
		name = water electrolysis 
		title = #KERBALISM_Process_WaterElectrolysis
		modifier = _WaterElectrolysis
		input = ElectricCharge@18.0 //reverse of H2O2 Fuel Cell
		input = Water@0.0048205
		output = Hydrogen@3.75000000013
		output = Oxygen@1.9265
		dump_valve = Hydrogen,Oxygen
	}

	Process //Redefine
	{
		name = waste incinerator
		title = #KERBALISM_Process_WasteIncinerator
		modifier = _WasteIncinerator
		input = Waste@0.00005413335// H18C82
		input = Oxygen@0.07945971245
		output = CarbonDioxide@0.07487198025
		output = Water@0.00000656295
		output = ElectricCharge@0.005
		dump_valve = Water,ElectricCharge,Water&ElectricCharge
	}

	// convention: 1 capacity = enough to process output of 1 crew member
	Process
	{
		name = waste processor
		title = #KERBALISM_Process_WasteProcessor
		modifier = _WasteProcessor
		input = ElectricCharge@0.065556
		input = Waste@0.00002314814
		// According to https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4500995/ feces contains approximately 0.7% nitrogen.
		// Feces is considered to the dominant source of Waste
		// Waste is 975.3 times more dense than Ammonia
		output = Ammonia@0.0000122703
	}

	// convention: 1 capacity = enough to compress output of 1 crew member
	Process
	{
		name = waste compressor
		title = #KERBALISM_Process_WasteCompressor
		modifier = _WasteCompressor
		input = ElectricCharge@1.2
		input = Waste@0.00000525285 //Same mass ratio as stock compressor
		output = Shielding@0.00000000801491
	}

	/////////////
	//Electrics//
	/////////////

	Process
	{
		name = electric generator
		title = #KERBALISM_Process_ElectricGenerator
		modifier = _ECGen
		output = ElectricCharge@1.0
	}

	Process
	{
		name = radioisotope generator
		title = #KERBALISM_Process_RadioisotopeGenerator
		modifier = _RTG
		input = _RTG@0.00000000110199727 // 28.8 kerbin-year half-life - needs to be doubled
		output = ElectricCharge@1.0
	}

	//////////////
	//Fuel Cells//  
	//////////////
	//All are based on Rational Resources Fuel Cells, which have standard ratios based on 1 capacity producing 18 EC/s
	Process
	{
		name = H2O2FuelCell
		title = H2O2 Fuel Cell
		modifier = _H2O2FuelCell
		input = Hydrogen@3.75000000013
		input = Oxygen@1.9265
		output = Water@0.0048205
		output = ElectricCharge@18.0
		dump_valve = Water
	}

	Process
	{
		name = keroloxFuelCell
		title = Kerolox Fuel Cell
		modifier = _KeroloxFuelCell
		input = LiquidFuel@0.010125
		input = Oxidizer@0.012375
		output = ElectricCharge@18.0
	}
	
	Process
	{
		name = hydroloxFuelCell
		title = Hydrolox Fuel Cell
		modifier = _HydroloxFuelCell
		input = LqdHydrogen@0.18562
		input = Oxidizer@0.012375
		output = Water@0.06961
		output = ElectricCharge@18.0
		dump_valve = Water
	}
	
	Process
	{
		name = methaloxFuelCell
		title = Methalox Fuel Cell
		modifier = _MethaloxFuelCell
		input = LqdMethane@0.037125
		input = Oxidizer@0.012375
		output = ElectricCharge@18.0
	}

	Process
	{
		name = hypergolicFuelCell
		title = Hypergolic Fuel Cell
		modifier = _HypergolicFuelCell
		input = Aerozine50@0.061875
		input = NitrogenTetroxide@0.050625
		output = ElectricCharge@18.0
	}

	Process
	{
		name = carbonMonoxideFuelCell
		title = Carbon Monoxide-Oxygen Fuel Cell
		modifier = _CarbonMonoxideFuelCell
		input = LqdCO@0.136125
		input = Oxidizer@0.012375
		output = ElectricCharge@18.0
	}

	//Based on stock Kerbalism Fuel Cells
	Process
	{
		name = hydrazineOxygenFuelCell
		title = Hydrazine-Oxygen Fuel Cell
		modifier = _HydrazineOxygenFuelCell
		input = Oxygen@4.5917540325
		input = MonoPropellant@0.00162228622 // (Hydrazine@0.000718143525)
		output = Nitrogen@4.5345431655
		output = Water@0.0072961884
		output = ElectricCharge@18.0
		dump_valve = Water, Nitrogen, Water&Nitrogen
	}

	//Emergency APU which can be added to capsules only.
	Process
	{
		name = hydrazineFuelCell
		title = Hydrazine Fuel Cell
		modifier = _HydrazineFuelCell
		input = MonoPropellant@0.003
		output = ElectricCharge@18.0
	}

	///////////////////
	//Radiators//  
	///////////////////

	///////////////////
	//ISRU Converters//  
	///////////////////

	//Fuel Production (Liquids) //Uses a custom formula loosely based on projects of mass flow from the Mars 2020 rover's "MOXIE" Experiment. Everything is based around 1 capacity being enough to produce 5 tons of output in about 4 years. This is much weaker than stock Kerbalism, but should allow for more realistic ISRU timescales. This also makes direct harvesting a lot more attractive, as it requires a lot less time to produce fuels if you can pull them directly from the ground, ocean, or atmosphere.
	//Note - do a little testing with ISRU of the fuels before moving on to the rest - get an idea if this is balanced or a bit too slow (I'm leaning heavily towards a bit too slow... Also account for the fact that ISRU doesn't seem to like doing the same process twice
	Process  //
	{
		name = kerolox
		title = Kerolox
		modifier = _Kerolox
		input = ElectricCharge@24 //Made more power hungry so that Methalox is more effective
		input = LqdHydrogen@0.00362627105
		input = LqdCO2@0.0044124898
		output = LiquidFuel@0.0003341616
		output = Oxidizer@0.0007525984
		dump_valve = LiquidFuel,Oxidizer
	}	
	Process
	{
		name = kerosene
		title = Kerosene
		modifier = _Kerosene
		input = ElectricCharge@24 
		input = LqdHydrogen@0.0117495718
		input = Carbon@0.0021911345
		output = LiquidFuel@0.0010867671
	}		
	Process //
	{
		name = hydrolox //Might want to add a higher-power, decently faster version
		title = Hydrolox 
		modifier = _Hydrolox
		input = ElectricCharge@12
		input = Water@0.00869395325
		output = LqdHydrogen@0.00859459105
		output = Oxidizer@0.0009650055
		dump_valve = LqdHydrogen,Oxidizer
	}
	Process
	{
		name = methalox
		title = Methalox 
		modifier = _Methalox
		input = ElectricCharge@12
		input = LqdCO2@0.0042416153
		input = LqdHydrogen@0.00644725775
		output = LqdMethane@0.0042642387
		output = Oxidizer@0.0007239018
		dump_valve = LqdMethane,Oxidizer
	}
	Process
	{
		name = hypergolic
		title = Hypergolic
		modifier = _Hypergolic
		input = ElectricCharge@12
		input = Carbon@0.0010229338
		input = LqdHydrogen@0.0023868403
		input = LqdNitrogen@0.0030333349
		input = Oxidizer@0.0001228652
		output = Aerozine50@0.00203346255
		output = NitrogenTetroxide@0.00248534135
		dump_valve = Aerozine50,NitrogenTetroxide
	}
	Process
	{
		name = aerozine50
		title = Aerozine50 
		modifier = _Aerozine50
		input = ElectricCharge@12
		input = Carbon@0.001930143
		input = LqdHydrogen@0.00450366965
		input = LqdNitrogen@0.0012867633
		output = Aerozine50@0.00603758845
	}	
	Process
	{
		name = nitrogenTetroxide
		title = NitrogenTetroxide
		modifier = _NitrogenTetroxide
		input = ElectricCharge@12
		input = LqdNitrogen@0.0051596344
		input = Oxidizer@0.00023553475
		output = NitrogenTetroxide@0.00374743635
	}	
	Process
	{
		name = hydrazineA
		title = Hydrazine A
		modifier = _HydrazineA
		input = ElectricCharge@12.0
		input = LqdHydrogen@0.00964976355
		input = LqdNitrogen@0.0057583185
		output = MonoPropellant@0.001358478
	}	
	Process
	{
		name = hydrazineB
		title = Hydrazine B 
		modifier = _HydrazineB
		input = ElectricCharge@12.0
		input = LqdAmmonia@0.00773956725
		output = LqdHydrogen@0.00809550895
		output = MonoPropellant@0.0012150395
		dump_valve = LqdHydrogen,MonoPropellant		
	}		
	
	Process
	{
		name = ammoniaBrewer
		title = Ammonia Brewer
		modifier = _AmmoniaBrewer
		input = ElectricCharge@12.0
		input = LqdHydrogen@0.0136180058
		input = LqdNitrogen@0.0054178463
		output = LqdAmmonia@0.00773909695
	}
	
	
	//Gaseous Processes
	Process
	{
		name = sabatierProcess   
		title = Sabatier Process
		modifier = _SabatierProcess
		input = ElectricCharge@8.082126 // calculated using 3.256 J/(g K) (sustained heating to 575K)
		input = CarbonDioxide@2.3538663525
		input = Hydrogen@9.35960695395
		output = Water@0.0060157147
		output = Methane@2.33477183275

		// Note that LiquidFuel has a density of 5Kg/Unit
		dump_valve = Water,Methane
	}
	Process
	{
		name = haberProcess
		title = Haber Process
		modifier = _HaberProcess
		input = ElectricCharge@5.94773  // calculated using 2.9367 J/(g K) (sustained heating to 700K)
		input = Nitrogen@3.5723767579
		input = Hydrogen@10.7318595766
		output = Ammonia@7.0661085825
	}
	Process
	{
		name = selectiveCatalyticOxidation
		title = Selective Catalytic Oxidation
		modifier = _SelectiveCatalyticOxidation
		input = ElectricCharge@7.166717  // calculated using 2.9367 J/(g K) (sustained 	heating to 700K)
		input = Ammonia@2.90710543175
		input = Oxygen@2.30269002068
		output = Nitrogen@1.4697305816
		output = Water@0.00575243485
		dump_valve = Water,Nitrogen
	}
	Process
	{
		name = carbonMonoxideA
		title = Carbon Monoxide A
		modifier = _CarbonMonoxideA
		input = ElectricCharge@6.0
		input = CarbonDioxide@2.7647456834
		output = Oxygen@0.02866767336
		output = CarbonMonoxide@4.3470717121
		dump_valve = CarbonMonoxide,Oxygen
	}
	Process
	{
		name = carbonMonoxideB
		title = Carbon Monoxide B
		modifier = _CarbonMonoxideB
		input = ElectricCharge@6.0
		input = Carbon@0.00103483745
		input = Water@0.0052170717
		output = CarbonMonoxide@4.05466645075
		output = Hydrogen@4.0657784227
		dump_valve = CarbonMonoxide,Hydrogen
	}		

	//Life-Support Related Processes
	Process
	{
		name = solidOxideElectrolysis
		title = Solid Oxide Electrolysis
		modifier = _SolidOxideElectrolysis
		input = ElectricCharge@20.0   // calculated using 10.1749 J/(g K)  (sustained heating to 1125K)
		input = CarbonDioxide@2.7851184264
		output = Oxygen@2.88781590045
		output = Shielding@0.0000189736 // makes Shielding out of waste Carbon
		dump_valve = Shielding,Oxygen
	}

	Process
	{
		name = moltenRegolithElectrolysis
		title = Molten Regolith Electrolysis
		modifier = _MoltenRegolithElectrolysis
		input = ElectricCharge@20.0 // 2 kW MRE reactor at 2300 K with heat corrosion resistant crucible
		input = Ore@0.0005433846
		output = Oxygen@3.4494134551 // 42% of regolith is O2
		output = CarbonDioxide@0.16734580695  // approx 2% of regolith is CO2, released in the pre-heating stage @950K
		output = Shielding@0.0000042193// makes Shielding out of waste Slag
		dump_valve = Shielding&CarbonDioxide,Shielding,Shielding&Oxygen,CarbonDioxide,Oxygen,CarbonDioxide&Oxygen
	}

	Process
	{
		name = moltenRegolithElectrolysisRock
		title = Molten Regolith Electrolysis (Rock)
		modifier = _MoltenRegolithElectrolysisRock
		input = ElectricCharge@20.0
		input = Rock@0.0021734819
		output = Oxygen@3.4494134551
		output = CarbonDioxide@0.16734580695
		output = Shielding@0.0000042193
		dump_valve = Shielding&CarbonDioxide,Shielding,Shielding&Oxygen,CarbonDioxide,Oxygen,CarbonDioxide&Oxygen
	}

///

	//Splitters, Extractors, and Fusers
	Process
	{
		name = aluminaSplitter 
		title = Alumina Splitter
		modifier = _AluminaSplitter
		input = ElectricCharge@6.0
		input = Alumina@0.0013653042
		output = Metals@0.0005767675
		output = Oxygen@0.6631047656
		dump_valve = Metals,Oxygen
	}	
	Process
	{
		name = carbonExtractor
		title = Carbon Extractor
		modifier = _CarbonExtractor
		input = ElectricCharge@12.0
		input = Ore@0.0007655176
		output = Carbon@0.00152976145
	}
	Process
	{
		name = carbonFuser
		title = Carbon Fuser
		modifier = _CarbonFuser
		input = ElectricCharge@12.0
		input = Carbon@0.012
		input = Oxygen@11.6950310523
		output = CarbonDioxide@11.2909
	}
	Process
	{
		name = carbonDioxideSplitter
		title = Carbon Dioxide Splitter
		modifier = _CarbonDioxideSplitter
		input = ElectricCharge@6.0
		input = CarbonDioxide@11.2909
		output = Oxygen@11.6950310523
		output = Carbon@0.012
		dump_valve = Carbon,Oxygen
	}	
	Process
	{
		name = hydratesSplitter // Original
		title = Hydrates Splitter
		modifier = _HydratesSplitter
		input = ElectricCharge@6.0
		input = Hydrates@0.00362256445
		output = Water@0.0025489501
		output = XenonGas@0.00012730605
		output = ArgonGas@0.0079186133
		output = MetallicOre@0.0000241249
		output = Oxygen@0.61106410855
		dump_valve = XenonGas&ArgonGas&MetallicOre&Oxygen,Water&XenonGas&ArgonGas&MetallicOre,XenonGas&ArgonGas&MetallicOre,Water&ArgonGas&MetallicOre&Oxygen,Water&XenonGas&MetallicOre&Oxygen,Water&XenonGas&ArgonGas&Oxygen,Water,XenonGas,ArgonGas,MetallicOre,Oxygen
	}
	Process
	{
		name = monaziteSplitter
		title = Monazite Splitter
		modifier = _MonaziteSplitter
		input = ElectricCharge@12.0
		input = Monazite@0.00108677505
		output = RareMetals@0.0005255402
		output = Phosphorus@0.00013033395
		output = Oxygen@0.4916958398
		dump_valve = RareMetals,Phosphorus,Oxygen,RareMetals&Phosphorus,RareMetals&Oxygen,Phosphorus&Oxygen
	}
	Process
	{
		name = silicatesSplitter
		title = Silicates Splitter
		modifier = _SilicatesSplitter
		input = ElectricCharge@15.0
		input = Silicates@0.2458479199
		output = Silicon@0.0008526421
		output = Oxygen@2.4825741373
		dump_valve = Silicon,Oxygen
	}
	Process
	{
		name = spodumeneSplitter 
		title = Spodumene Splitter
		modifier = _SpodumeneSplitter
		input = ElectricCharge@15.0
		input = Spodumene@0.0017528508
		output = Lithium@0.001440572
		output = Metals@0.00038172315
		output = Silicates@0.00067485255
		dump_valve = Lithium,Lithium&Silicates,Lithium&Metals,Metals&SilicatesSilicates,Metals
	}
	Process
	{
		name = waterElectrolysis
		title = Water Electrolysis
		modifier = _WaterElectrolysis
		input = ElectricCharge@2.4026694940
		input = Water@0.00869414
		output = Hydrogen@6.7634862984
		output = Oxygen@3.47454826255
		dump_valve = Hydrogen,Oxygen
	}
	Process 
	{
		name = deuteriumProduction
		title =  Deuterium Production
		modifier = _DeuteriumProduction
		input = ElectricCharge@6.0
		input = Water@0.00869414195
		output = Hydrogen@6.662949217
		output = Oxygen@3.48038317515
		output = LqdDeuterium@0.00000574486
		dump_valve = Hydrogen,Oxygen,LqdDeuterium,Hydrogen&Oxygen,LqdDeuterium&Oxygen,Hydrogen&LqdDeuterium
	}
  
	//Other
	Process
	{
		name = glykerolBrewer
		title = Glykerol Brewer
		modifier = _GlykerolBrewer
		input = ElectricCharge@24.0
		input = Water@0.0058423563
		input = Carbon@0.00086947215
		output = Glykerol@0.0000578705
		output = Oxygen@0.0088182075
		dump_valve = Oxygen,Glykerol
	}
  
	////////////////////////
	//Freezers and Heaters//  
	////////////////////////
	Process
	{
		name = freezeAmmonia
		title = Freeze Ammonia
		modifier = _FreezeAmmonia
		input = ElectricCharge@1.5
		input = Ammonia@221.47
		output = LqdAmmonia@0.12
	}
	
	Process
	{
		name = freezeCarbonDioxide
		title = Freeze Carbon Dioxide
		modifier = _FreezeCarbonDioxide
		input = ElectricCharge@1.5
		input = CarbonDioxide@112.79
		output = LqdCO2@0.19
	}
	
	Process
	{
		name = freezeCarbonMonoxide
		title = Freeze Carbon Monoxide
		modifier = _FreezeCarbonMonoxide
		input = ElectricCharge@1.5
		input = CarbonMonoxide@112.04
		output = LqdCO@0.1773
	}
	
	Process
	{
		name = freezeHydrogen
		title = Freeze Hydrogen
		modifier = _FreezeHydrogen
		input = ElectricCharge@1.5
		input = Hydrogen@112.125
		output = LqdHydrogen@0.14
	}
	
	Process
	{
		name = freezeMethane
		title = Freeze Methane
		modifier = _FreezeMethane
		input = ElectricCharge@1.5
		input = Methane@111.94
		output = LqdMethane@0.19
	}
	
	Process
	{
		name = freezeNitrogen
		title = Freeze Nitrogen
		modifier = _FreezeNitrogen
		input = ElectricCharge@1.5
		input = Nitrogen@111.965
		output = LqdNitrogen@0.17
	}
	
	Process
	{
		name = freezeOxygen
		title = Freeze Oxygen
		modifier = _FreezeOxygen
		input = ElectricCharge@1.5
		input = Oxygen@115.2
		output = Oxidizer@0.032
	}
	
	Process
	{
		name = thawAmmonia
		title = Thaw Ammonia
		modifier = _ThawAmmonia
		input = ElectricCharge@3.0
		input = LqdAmmonia@0.12
		output = Ammonia@221.47
	}
	
	Process
	{
		name = thawCarbonDioxide
		title = Thaw Carbon Dioxide
		modifier = _ThawCarbonDioxide
		input = ElectricCharge@3.0
		input = LqdCO2@0.19
		output = CarbonDioxide@112.79
	}
	
	Process
	{
		name = thawCarbonMonoxide
		title = Thaw Carbon Monoxide
		modifier = _ThawCarbonMonoxide
		input = ElectricCharge@3.0
		input = LqdCO@0.1773
		output = CarbonMonoxide@112.04
	}
	
	Process
	{
		name = thawHydrogen
		title = Thaw Hydrogen
		modifier = _ThawHydrogen
		input = ElectricCharge@3.0
		input = LqdHydrogen@0.14
		output = Hydrogen@112.125
	}
	
	Process
	{
		name = thawMethane
		title = Thaw Methane
		modifier = _ThawMethane
		input = ElectricCharge@3.0
		input = LqdMethane@0.19
		output = Methane@111.94
	}
	
	Process
	{
		name = thawNitrogen
		title = Thaw Nitrogen
		modifier = _ThawNitrogen
		input = ElectricCharge@3.0
		input = LqdNitrogen@0.17
		output = Nitrogen@111.965
	}
	
	Process //Multiplier for stock Ox to SK Ox: 1.01520158625
	{
		name = thawOxygen
		title = Thaw Oxygen
		modifier = _ThawOxygen
		input = ElectricCharge@3.0
		input = Oxidizer@0.032
		output = Oxygen@115.2
	}
	
	////////////
	//Reactors//
	////////////
	Process
	{
		name = uraninite centrifuge
		modifier = _Centrifuge
		input = ElectricCharge@200
		input = Uraninite@0.005	
		output = EnrichedUranium@0.0005
	}

	Process
	{
		name = fuel reprocessor
		modifier = _Reprocessor
		input = DepletedFuel@0.05
		output = ElectricCharge@200
		output = EnrichedUranium@0.025
		dump_valve = EnrichedUranium
	}

	Process
	{
		name = fission reactor
		modifier = _Nukereactor
		input = EnrichedUranium@0.00000000175
		output = DepletedFuel@0.00000000175
		output = XenonGas@0.00000000007
		output = ElectricCharge@1.0
		dump_valve = XenonGas&DepletedFuel,XenonGas,DepletedFuel
	}
	
	////////////////////////////
	//Medbay and Stress Relief//  - still needs to be modified
	////////////////////////////

	Process
	{
		name = radiation detox unit
		title = #KERBALISM_Process_RadiationDetoxUnit
		modifier = _SickbayRDU
		input = ElectricCharge@3.5
		input = Oxygen@0.00101520158
		output = CarbonDioxide@0.00099397299
		cures = radiation@0.00000277777 // 0.02 rad/h
		dump = true
	}

	Process
	{
		name = tranquilizing vortex
		title = Comforts
		modifier = _SickbayTV
		input = ElectricCharge@2.5 //Instead of a TV, this represents the various comforts avalible in habitation modules
		cures = stress@0.000000002315
	}
	
	Process
	{
		name = stress reduction therapy
		title = Stress Reduction Therapy
		modifier = _SickbayTherapy
		cures = stress@0.00000000463
	}

  Process
  {
		name = zero gravity shower  // showers are complex
		title = #KERBALISM_Process_ZeroGravityShower
		modifier = _SickbayShower
		input = ElectricCharge@0.014049975308642 //  sustained heating @4.184 J/gK to 313 K from 273 K storage temperature,
		input = Water@0.000312375
	// 5.44 L per shower, source : http://www.marsjournal.org/contents/2006/0005/files/rapp_mars_2006_0005.pdf
		output = WasteWater@0.000312375
		// water content fully recovered
		interval = 64800.0 // one shower every 18 hours / 3 days
		cures = stress@0.000000002315
	}

	Process
	{
		name = washer-dryer  // laundry is hard
		title = #KERBALISM_Process_WasherDryer
		modifier = _SickbayLaundry // one complete kerbal outfit is 0.77 kg source : https://ttu-ir.tdl.org/ttu-ir/bitstream/handle/2346/72928/ICES_2017_106.pdf?sequence=1&isAllowed=y
		input = ElectricCharge@0.0463715278 //  13.36 kWh / 3.06 kg clothing
		input = Water@0.28425
		// 22 L per 3.06 kg clothes
		output = WasteWater@0.28425
		// water content fully recovered
		interval = 259200.0 // kerbals change clothes every 72 hours / 12 days
		cures = stress@0.000000002315
	}
}


// ============================================================================
// Add Part Upgrade for upgradeable slots
// ============================================================================

PARTUPGRADE:NEEDS[ProfileSkyhawk]
{
  name = ISRUSlotUpgrade
  partIcon = kerbalism-chemicalplant
  techRequired = isru11
  entryCost = 20000
  title = #KERBALISM_Upgrade_Slots_title//Life support and Chemical plant slot upgrade
  manufacturer = Skyhawk Aerospace Corporation
  description = #KERBALISM_Upgrade_Slots_desc//Adds an additional configurable slot to Manned pods, ECLSS module and Chemical plants.
}

PARTUPGRADE:NEEDS[ProfileSkyhawk]
{
  name = LifeSupportSlotUpgrade
  partIcon = kerbalism-lifesupportmodule
  techRequired = logistics6
  entryCost = 20000
  title = Life Support Slot Upgrade
  manufacturer = Skyhawk Aerospace Corporation
  description = Adds an additional configurable slot to Manned pods and ECLSS modules.
}


// ============================================================================
// Command Module Life-Support 
// ============================================================================

@PART[*]:HAS[#CrewCapacity[>0],!MODULE[KerbalSeat],~SK_LifeSupportSystem[True]]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{
	MODULE
	{
		name = ProcessController
		resource = _BasicLiOHScrubber
		title = Basic LiOH Scrubber
		capacity = #$/CrewCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _BasicRegenerativeScrubber
		title = Basic Regenerative Scrubber
		capacity = #$/CrewCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _AdvancedLiOHScrubber
		title = Advanced LiOH Scrubber
		capacity = #$/CrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _AdvancedRegenerativeScrubber
		title = Advanced Regenerative Scrubber
		capacity = #$/CrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure Control
		capacity = #$/CrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water Recycler
		capacity = #$/CrewCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste Processor
		capacity = #$/CrewCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _HydrazineFuelCell
		title = Hydrazine Fuel Cell
		capacity = #$/CrewCapacity$
		@capacity /= 18
		running = true
	}
	
	MODULE
	{
		name = Configure
		title = Life Support
		slots = 2

		//UPGRADES
		//{
		//	UPGRADE
		//	{
		//	name__ = LifeSupportSlotUpgrade
		//	techRequired__ = capsules7
		//	slots = 2
		//	}
		//}

     	SETUP
     	{
     		name = None
     		desc = Empty slot for mass and cost savings.
     	}

     	SETUP
     	{
     		name = Basic LiOH Scrubber
     		desc = A basic non-regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere using <b>LithiumHydroxide</b>. Can last 7 days before wearing out.
     		mass = 0.01
     		cost = 250
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _BasicLiOHScrubber
     		}
     		RESOURCE
     		{
     			name = LithiumHydroxide
     			amount = #$/CrewCapacity$
     			maxAmount = #$/CrewCapacity$
				
     		}
     	}
	 
     	SETUP
     	{
     		name = Basic Regenerative Scrubber
     		desc = A basic dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere with no risk of wearing out. This experimental model can only handle half the CO2 produced by the capsule's crew, meaning multiple will be needed for full effectiveness.
     		tech = capsules7
     		mass = 0.04
     		cost = 750
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _BasicRegenerativeScrubber
     		}

     	}		 
	 
     	SETUP
     	{
     		name = Advanced LiOH Scrubber
     		desc = An advanced non-regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere using <b>LithiumHydroxide</b>. Improved internal design allows for increased LiOH capacity, so it can last 28 days before wearing out.
     		tech = capsules8
     		mass = 0.02
     		cost = 500
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _AdvancedLiOHScrubber
     		}
     		RESOURCE
     		{
     			name = LithiumHydroxide
     			amount = #$/CrewCapacity$
     			maxAmount = #$/CrewCapacity$
     			@maxAmount *= 4
     			@amount *= 4
     		}
     	} 

     	SETUP
     	{
     		name = Advanced Regenerative Scrubber
     		desc = An improved dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere with no risk of wearing out. This model can handle all the CO2 produced by the capsule's crew.
     		tech = capsules9
     		mass = 0.08
     		cost = 1000
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _AdvancedRegenerativeScrubber
     		}

     	}	 
	 
         SETUP
         {
     		name = Pressure Control
     		desc = Uses <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
     		tech = capsules6
     		mass = 0.01
     		cost = 250
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _PressureControl
     		}
     
     		RESOURCE //Eventually change both this and other resources to be based on the capsule's type. (Eg mercury type pods have about 1 day's worth, Gemini and apollo a week, orion a month or so, and futuristic ones get the full default load) - maybe even better, assign capsules a "man-days" or number of days the capsule is supposed to support a crew, via patch, and have the mod automatically assign supplies from that. Bonus points if it can also adjust for different day lengths as well!
     		{
     			// approx 5 days of leaks and volume of a crew member
     			// crew going eva will need the volume their bodies displaced within the vessel replaced with N2 to correct pressure drop,
     			// vise versa when entering from eva the pressure will increase due to the volume of the Kerbal displacing
     			// the internal vessel atmosphere, excess is vented overboard.
     			// The pressure controller can be disabled to save N2 that will be used replacing the Kerbals volume,
     			name = Nitrogen
     			amount = #$/CrewCapacity$
     			maxAmount = #$/CrewCapacity$
     			@amount *= 150  // 1.3 for leaks, 330 Kerbal volume //331 seemed a little high - that's approximately 8 years per kerbal! I reduced the value to make it more resonable
     			@maxAmount *= 150
     		}
     	}
     
        SETUP
        {
     		name = Hydrazine Fuel Cell
     		desc = An emergency fuel cell which uses <b>Hydrazine</b> to produce <b>ElectricCharge</b>.
     		tech = capsules8
     		mass = 0.1
     		cost = 1000
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydrazineFuelCell
     		}
        }	 
	 
        SETUP
        {
     		name = Water Recycler
     		desc = Filter impurities out of <b>WasteWater</b>.
     		tech = capsules9
     		mass = 0.05
     		cost = 500
     
           MODULE
           {
     			type = ProcessController
     			id_field = resource
     			id_value = _WaterRecycler
           }
     
     		RESOURCE
     		{
     			name = WasteWater
     			amount = 0
     			maxAmount = #$/CrewCapacity$
     			@maxAmount *= 5
     
     		}
        }
     
        SETUP
        {
     		name = Waste Processor
     		desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
     		tech = capsules9
     		mass = 0.05
     		cost = 500
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _WasteProcessor
     		}
     
     		RESOURCE
     		{
     		name = Waste
     			amount = 0
     			maxAmount = #$/CrewCapacity$
     			@maxAmount *= 5
     		}
        }
	}
}

// boost Mk3 Shuttle cockpit and Science Lab Nitrogen storage
@PART[mk3Cockpit_Shuttle,Large_Crewed_Lab]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{
  @MODULE[Configure]:HAS[#title[Life?Support]]
  {
    @SETUP[Pressure?Control]
    {
    @RESOURCE[Nitrogen]
      {
        @amount *= 3
        @maxAmount *= 3
      }
    }
  }
}

// ============================================================================
// External Life Support Modules
// ============================================================================
//External Life Support Systems
@PART[*]:HAS[#SK_LifeSupportSystem[True]]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{

	MODULE
	{
		name = ProcessController
		resource = _BasicRegenerativeScrubber
		title = Basic Regenerative Scrubber
		capacity = #$/LSCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _AdvancedRegenerativeScrubber
		title = Advanced Regenerative Scrubber
		capacity = #$/LSCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure Control
		capacity = #$/LSCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water Recycler
		capacity = #$/LSCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste Processor
		capacity = #$/LSCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = #KERBALISM_AirPump_title//Air Pump
		capacity = #$/LSCapacity$
		running = true
	}

	MODULE
	{
		name = Configure
		title = ECLSS
		slots = 2

		//UPGRADES
		//{
		//	UPGRADE
		//	{
		//	name__ = LifeSupportSlotUpgrade
		//	techRequired__ = capsules7
		//	slots = 2
		//	}
		//}

     	SETUP
     	{
     		name = Basic Regenerative Scrubber
     		desc = A basic dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere with no risk of wearing out. This experimental model can only handle half the CO2 produced by the capsule's crew, meaning multiple will be needed for full effectiveness.
     		mass = 0.04
     		cost = 750
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _BasicRegenerativeScrubber
     		}

     	}	 	 

     	SETUP
     	{
     		name = Advanced Regenerative Scrubber
     		desc = An improved dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere with no risk of wearing out. This model can handle all the CO2 produced by the capsule's crew.
     		tech = capsules7
     		mass = 0.08
     		cost = 1000
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _AdvancedRegenerativeScrubber
     		}

     	}	 
	 
        SETUP
        {
     		name = Pressure Control
     		desc = Uses <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
     		mass = 0.01
     		cost = 250
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _PressureControl
     		}
     
     		RESOURCE
     		{

     			name = Nitrogen
     			amount = #$/LSCapacity$
     			maxAmount = #$/LSCapacity$
     			@amount *= 150  
     			@maxAmount *= 150
     		}
     	}
     
        SETUP
        {
     		name = Water Recycler
     		desc = Filter impurities out of <b>WasteWater</b>.
     		tech = capsules8
     		mass = 0.05
     		cost = 500
     
           MODULE
           {
     			type = ProcessController
     			id_field = resource
     			id_value = _WaterRecycler
           }
     
     		RESOURCE
     		{
     			name = WasteWater
     			amount = 0
     			maxAmount = #$/LSCapacity$
     			@maxAmount *= 5
     
     		}
        }
     
        SETUP
        {
     		name = Waste Processor
     		desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
     		tech = capsules8
     		mass = 0.05
     		cost = 500
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _WasteProcessor
     		}
     
     		RESOURCE
     		{
				name = Waste
     			amount = 0
     			maxAmount = #$/LSCapacity$
     			@maxAmount *= 5
     		}
        }

		SETUP
		{
			name = Air Pump
			desc = #KERBALISM_AirPump_desc//Regulates habitat pressure using outside air
			mass = 0.1
			cost = 1000

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AirPump
			}
		}
	}
}

// ============================================================================
// Add scrubber process to EVA kerbals
// ============================================================================

@PART[kerbalEVA*]:HAS[@MODULE[ModuleTripLogger]]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{
	MODULE
	{
		name = ProcessController
		resource = _BasicLiOHScrubber
		title = Basic LiOH Scrubber
		capacity = 1
		toggle = true
		running = true
	}
	
    RESOURCE
    {
		name = LithiumHydroxide
     	amount = 0.25
     	maxAmount = 0.25
    }
}

// ============================================================================
// Fuel Cells
// ============================================================================
@PART[*]:HAS[#SK_FuelCell[True]]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{

	!MODULE[ModuleResourceConverter] {}
	!RESOURCE[ElectricCharge] {}

	MODULE
	{
		name = ProcessController
		resource = _H2O2FuelCell
		title = H2O2 Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _HydrazineFuelCell
		title = Hydrazine Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _KeroloxFuelCell
		title = Kerolox Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _HydroloxFuelCell
		title = Hydrolox Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _MethaloxFuelCell
		title = Methalox Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _HypergolicFuelCell
		title = Hypergolic Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _CarbonMonoxideFuelCell
		title = Carbon Monoxide Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}	
	
	MODULE
	{
		name = ProcessController
		resource = _HydrazineOxygenFuelCell
		title = Hydrazine-Oxygen Fuel Cell
		capacity = #$/FuelCellCapacity$
		running = true
	}		
	
	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1
		reconfigure = Engineer@3

     	SETUP //Maybe consider adding tankage for each byproduct
     	{
     		name = H2O2 Fuel Cell
     		desc = A fuel cell which reacts <b>Hydrogen</b> and <b>Oxygen</b> to produce <b>ElectricCharge</b> with <b>Water</b> as a by-product.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _H2O2FuelCell
     		}
     	}
		
     	SETUP 
     	{
     		name = Hydrazine Fuel Cell
     		desc = A fuel cell which consumes <b>Hydrazine</b> produce <b>ElectricCharge</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydrazineFuelCell
     		}
     	}			
		
     	SETUP 
     	{
     		name = Kerolox Fuel Cell
     		desc = A fuel cell which reacts <b>Kerosene</b> and <b>LqdOxygen</b> to produce <b>ElectricCharge</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _KeroloxFuelCell
     		}
     	}
		
     	SETUP 
     	{
     		name = Hydrolox Fuel Cell
     		desc = A fuel cell which reacts <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>ElectricCharge</b> with <b>Water</b> as a by-product.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydroloxFuelCell
     		}
     	}
		
     	SETUP 
     	{
     		name = Methalox Fuel Cell
     		desc = A fuel cell which reacts <b>LqdMethane</b> and <b>LqdOxygen</b> to produce <b>ElectricCharge</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _MethaloxFuelCell
     		}
     	}
		
     	SETUP 
     	{
     		name = Hypergolic Fuel Cell
     		desc = A fuel cell which reacts <b>Aerozine50</b> and <b>NitrogenTetroxide</b> to produce <b>ElectricCharge</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HypergolicFuelCell
     		}
     	}
		
     	SETUP 
     	{
     		name = Carbon Monoxide Fuel Cell
     		desc = A fuel cell which reacts <b>LqdCO</b> and <b>LqdOxygen</b> to produce <b>ElectricCharge</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonMonoxideFuelCell
     		}
     	}

     	SETUP 
     	{
     		name = Hydrazine-Oxygen Fuel Cell
     		desc = A fuel cell which reacts <b>Hydrazine</b> and <b>Oxygen</b> to produce <b>ElectricCharge</b> with <b>Water</b> and <b>Nitrogen</b> as by-products.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydrazineOxygenFuelCell
     		}
     	}			
	}
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}	
}

// ============================================================================
// ISRU Processors
// ============================================================================
@PART[*]:HAS[#SK_ISRU[True]]:NEEDS[ProfileSkyhawk]:FOR[KerbalismSkyhawk]
{

	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}
	
	MODULE
	{
		name = ProcessController
		resource = _Kerolox
		title = Kerolox Fuel Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Kerosene
		title = Kerosene Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Hydrolox
		title = Hydrolox Fuel Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Methalox
		title = Methalox Fuel Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Hypergolic
		title = Hypergolic Fuel Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Aerozine50
		title = Aerozine50 Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _NitrogenTetroxide
		title = Nitrogen Tetroxide Synthesis  
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _HydrazineA
		title = Hydrazine Synthesis (H2+N2) 
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _HydrazineB
		title = Hydrazine Synthesis (NH3) 
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _AmmoniaBrewer
		title = Ammonia Brewer
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _SabatierProcess
		title = Sabatier Process
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _HaberProcess
		title = Haber Process
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _SelectiveCatalyticOxidation
		title = Selective Catalytic Oxidation
		capacity = #$/ISRUCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _CarbonMonoxideA
		title = High-Temperature Electrolysis
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _CarbonMonoxideB
		title = Water Gas Production 
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _SolidOxideElectrolysis
		title = Solid Oxide Electrolysis 
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _MoltenRegolithElectrolysis
		title = Molten Regolith Electrolysis (Ore)
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _MoltenRegolithElectrolysisRock
		title = Molten Regolith Electrolysis (Rock)
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _AluminaSplitter
		title = Alumina Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _CarbonExtractor
		title = Carbon Extractor
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _CarbonFuser
		title = Carbon Fuser
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _CarbonDioxideSplitter
		title = Carbon Dioxide Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _HydratesSplitter
		title = Hydrates Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _MonaziteSplitter
		title = Monazite Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _SilicatesSplitter
		title = Silicates Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}
	
	MODULE
	{
		name = ProcessController
		resource = _SpodumeneSplitter
		title = Spodumene Splitter
		capacity = #$/ISRUCapacity$
		running = true
	}	
	
	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = Water Electrolysis
		capacity = #$/ISRUCapacity$
		running = true
	}	
	
	MODULE
	{
		name = ProcessController
		resource = _DeuteriumProduction
		title = Deuterium Production
		capacity = #$/ISRUCapacity$
		running = true
	}	
	
	MODULE
	{
		name = ProcessController
		resource = _GlykerolBrewer
		title = Glykerol Brewer
		capacity = #$/ISRUCapacity$
		running = true
	}	

	MODULE
	{
		name = Configure
		title = ISRU
		slots = #$/ISRUSlots$
		reconfigure = Engineer@4

     	SETUP 
     	{
     		name = Kerolox Fuel Synthesis
     		desc = Produces a <b>Kerosene-LqdOxygen</b> fuel mix using <b>LqdHydrogen</b> and <b>LqdCO2</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Kerolox
     		}
     	}	
     	SETUP 
     	{
     		name = Kerosene Synthesis
     		desc = Produces <b>Kerosene</b> using <b>LqdHydrogen</b> and solid <b>Carbon</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Kerosene
     		}
     	}	
     	SETUP 
     	{
     		name = Hydrolox Fuel Synthesis
     		desc = Produces a <b>LqdHydrogen-LqdOxygen</b> fuel mix using <b>Water</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Hydrolox
     		}
     	}
     	SETUP 
     	{
     		name = Methalox Fuel Synthesis
     		desc = Produces a <b>LqdMethane-LqdOxygen</b> fuel mix using <b>LqdCO2</b> and <b>LqdOxygen</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Methalox
     		}
     	}	
     	SETUP 
     	{
     		name = Hypergolic Fuel Synthesis
     		desc = Produces a  <b>Aerozine50-NitrogenTetroxide</b> fuel mix using <b>Carbon</b>, <b>LqdHydrogen</b>, <b>LqdNitrogen</b>, and <b>LqdOxygen</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Hypergolic
     		}
     	}
     	SETUP 
     	{
     		name = Aerozine50 Synthesis
     		desc = Produces <b>Aerozine50</b> using <b>Carbon</b>, <b>LqdHydrogen</b>, and <b>LqdNitrogen</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _Aerozine50
     		}
     	}		
     	SETUP 
     	{
     		name = Nitrogen Tetroxide Synthesis
     		desc = Produces <b>NitrogenTetroxide</b> using <b>LqdNitrogen</b> and <b>LqdOxygen</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _NitrogenTetroxide
     		}
     	}			
     	SETUP 
     	{
     		name = Hydrazine Synthesis (H2+N2) 
     		desc = Produces <b>Hydrazine</b> using <b>LqdHydrogen</b> and <b>LqdNitrogen</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydrazineA
     		}
     	}	
     	SETUP 
     	{
     		name = Hydrazine Synthesis (NH3) 
     		desc = Produces <b>Hydrazine</b> and <b>LqdHydrogen</b> by breaking down <b>LqdAmmonia</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydrazineB
     		}
     	}	
     	SETUP 
     	{
     		name = Ammonia Brewer  
     		desc = Produce <b>LqdAmmonia</b> from <b>LqdHydrogen</b> and <b>LqdNitrogen</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _AmmoniaBrewer
     		}
     	}
     	SETUP 
     	{
     		name = Sabatier Process 
     		desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>Methane</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _SabatierProcess
     		}
     	}	
     	SETUP 
     	{
     		name = Haber Process 
     		desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HaberProcess
     		}
     	}		
     	SETUP 
     	{
     		name = Selective Catalytic Oxidation 
     		desc = <b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _SelectiveCatalyticOxidation
     		}
     	}	
     	SETUP 
     	{
     		name = High-Temperature Electrolysis 
     		desc = <b>CarbonDioxide</b> is broken into <b>CarbonMonoxide</b> and <b>Oxygen</b> via electrolysis using various oxide catalysts.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonMonoxideA
     		}
     	}	
     	SETUP 
     	{
     		name = Water Gas Production
     		desc = <b>Water</b> is heated to produce steam, which reacts with solid <b>Carbon</b> to produce <b>Hydrogen</b> and <b>CarbonMonoxide</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonMonoxideB
     		}
     	}
     	SETUP 
     	{
     		name = Solid Oxide Electrolysis 
     		desc = Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _SolidOxideElectrolysis
     		}
     	}		
     	SETUP 
     	{
     		name = Molten Regolith Electrolysis (Ore) 
     		desc = Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _MoltenRegolithElectrolysis
     		}
     	}
     	SETUP 
     	{
     		name = Molten Regolith Electrolysis (Rock) 
     		desc = Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Rock</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _MoltenRegolithElectrolysisRock
     		}
     	}	
     	SETUP 
     	{
     		name = Alumina Splitter
     		desc = Extract <b>Oxygen</b> out of <b>Alumina</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _AluminaSplitter
     		}
     	}	
     	SETUP 
     	{
     		name = Carbon Extractor
     		desc = Extract pure <b>Carbon</b> out of <b>Ore</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonExtractor
     		}
     	}			
     	SETUP 
     	{
     		name = Carbon Fuser
     		desc = Fuse <b>Carbon</b> and <b>Oxygen</b> into <b>CarbonDioxide</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonFuser
     		}
     	}
     	SETUP 
     	{
     		name = Carbon Dioxide Splitter
     		desc = Extract <b>Carbon</b> and <b>Oxygen</b> out of <b>CarbonDioxide</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _CarbonDioxideSplitter
     		}
     	}
     	SETUP 
     	{
     		name = Hydrates Splitter
     		desc = Extract <b>ArgonGas</b>, <b>Oxygen</b>, <b>Water</b> and <b>XenonGas</b> out of <b>Hydrates</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _HydratesSplitter
     		}
     	}
     	SETUP 
     	{
     		name = Monazite Splitter
     		desc = Extract <b>Phosphorus</b>, <b>Oxygen</b> and <b>RareMetals</b> out of <b>Monazite</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _MonaziteSplitter
     		}
     	}
     	SETUP 
     	{
     		name = Silicates Splitter
     		desc = Extract <b>Oxygen</b> and <b>Silicon</b> out of <b>Silicates</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _SilicatesSplitter
     		}
     	}
     	SETUP 
     	{
     		name = Spodumene Splitter
     		desc = Extract <b>Lithium</b>, <b>Aluminium</b> and <b>Silicates</b> out of <b>Spodumene</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _SpodumeneSplitter
     		}
     	}	
     	SETUP 
     	{
     		name = Water Electrolysis
     		desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _WaterElectrolysis
     		}
     	}				
     	SETUP 
     	{
     		name = Deuterium Production
     		desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components, along with some <b>Deuterium</b>
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _DeuteriumProduction
     		}
     	}			
     	SETUP 
     	{
     		name = Glykerol Brewer
     		desc = Create <b>Glykerol</b> from <b>Water</b> and <b>Carbon</b>.
     		mass = 0
     		cost = 0
     
     		MODULE
     		{
     			type = ProcessController
     			id_field = resource
     			id_value = _GlykerolBrewer
     		}
     	}			
	}	
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Process Controller
		title = Converter
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

// ============================================================================
// Freezers
// ============================================================================
@PART[*]:HAS[#SK_Freezer[True]]
{
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}
	MODULE
	{
		name = ProcessController
		resource = _FreezeMethane
		title = Methane Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeCarbonDioxide
		title = Carbon Dioxide Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeCarbonMonoxide
		title = Carbon Monoxide Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeHydrogen
		title = Hydrogen Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeNitrogen
		title = Nitrogen Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeAmmonia
		title = Ammonia Freezer
		capacity = #$/FreezerCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeOxygen
		title = Oxygen Freezer
		capacity = #$/FreezerCapacity$
	}
	
	MODULE
	{
		name = Configure
		title = Flash Freezer
		slots = 1
		reconfigure = Engineer@2
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 1
				@slots += 1
			}
		}
		SETUP
		{
			name = Ammonia Freezer
			desc = Freeze <b>Ammonia</b> into <b>LqdAmmonia</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeAmmonia
			}
		}
		SETUP
		{
			name = Carbon Dioxide Freezer
			desc = Freeze <b>CarbonDioxide</b> into <b>LqdCO2</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeCarbonDioxide
			}
		}
		SETUP
		{
			name = Carbon Monoxide Freezer
			desc = Freeze <b>CarbonMonoxide</b> into <b>LqdCO</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeCarbonMonoxide
			}
		}
		SETUP
		{
			name = Hydrogen Freezer
			desc = Freeze <b>Hydrogen</b> into <b>LqdHydrogen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeHydrogen
			}
		}
		SETUP
		{
			name = Methane Freezer
			desc = Freeze <b>Methane</b> into <b>LqdMethane</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeMethane
			}
		}
		SETUP
		{
			name = Nitrogen Freezer
			desc = Freeze <b>Nitrogen</b> into <b>LqdNitrogen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeNitrogen
			}
		}
		SETUP
		{
			name = Oxygen Freezer
			desc = Freeze <b>Oxygen</b> into <b>LqdOxygen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeOxygen
			}
		}
	}
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Process Controller
		title = Converter
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

// ============================================================================
// Heaters
// ============================================================================
@PART[*]:HAS[#SK_Heater[True]]
{
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}
	
	MODULE
	{
		name = ProcessController
		resource = _ThawMethane
		title = Methane Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawCarbonDioxide
		title = Carbon Dioxide Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawCarbonMonoxide
		title = Carbon Monoxide Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawHydrogen
		title = Hydrogen Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawNitrogen
		title = Nitrogen Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawAmmonia
		title = Ammonia Heater
		capacity = #$/HeaterCapacity$
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawOxygen
		title = Oxygen Heater
		capacity = #$/HeaterCapacity$
	}
	
	MODULE
	{
		name = Configure
		title = Quick Heater
		slots = 1
		reconfigure = Engineer@2
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 1
				@slots += 1
			}
		}
		SETUP
		{
			name = Ammonia Heater
			desc = Thaw <b>LqdAmmonia</b> into <b>Ammonia</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawAmmonia
			}
		}
		SETUP
		{
			name = Carbon Dioxide Heater
			desc = Thaw <b>LqdCO2</b> into <b>CarbonDioxide</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawCarbonDioxide
			}
		}
		SETUP
		{
			name = Carbon Monoxide Heater
			desc = Thaw <b>LqdCO</b> into <b>CarbonMonoxide</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawCarbonMonoxide
			}
		}
		SETUP
		{
			name = Hydrogen Heater
			desc = Thaw <b>LqdHydrogen</b> into <b>Hydrogen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawHydrogen
			}
		}
		SETUP
		{
			name = Methane Heater
			desc = Thaw <b>LqdMethane</b> into <b>Methane</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawMethane
			}
		}
		SETUP
		{
			name = Nitrogen Heater
			desc = Thaw <b>LqdNitrogen</b> into <b>Nitrogen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawNitrogen
			}
		}
		SETUP
		{
			name = Oxygen Heater
			desc = Thaw <b>LqdOxygen</b> into <b>Oxygen</b>.
			
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawOxygen
			}
		}
	}
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Process Controller
		title = Converter
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

// ============================================================================
// Surface Harvesters
// ============================================================================
@PART[*]:HAS[#SK_Drill[True]]
{
	!MODULE[ModuleResourceHarvester] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
	
	//We are going to go with a rate of 54L per day 
	MODULE
	{
		name = Harvester
		title = #KERBALISM_OreExcavation_title//Ore Excavation
		type = 0
		resource = Ore
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Alumina Excavation
		type = 0
		resource = Alumina
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Ammonia Excavation
		type = 0
		resource = Ammonia
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Carbon Dioxide Excavation
		type = 0
		resource = CarbonDioxide
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Exotic Minerals Excavation
		type = 0
		resource = ExoticMinerals
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Gypsum Excavation
		type = 0
		resource = Gypsum
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Hydrates Excavation
		type = 0
		resource = Hydrates
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = LqdHe3 Excavation
		type = 0
		resource = LqdHe3
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = MetallicOre Excavation
		type = 0
		resource = MetallicOre
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Methane Excavation
		type = 0
		resource = Methane
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Minerals Excavation
		type = 0
		resource = Minerals
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Monazite Excavation
		type = 0
		resource = Monazite
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Nitrogen Excavation
		type = 0
		resource = Nitrogen
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Oxygen Excavation
		type = 0
		resource = Oxygen
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Rock Excavation
		type = 0
		resource = Rock
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = RareMetals Excavation
		type = 0
		resource = RareMetals
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Silicates Excavation
		type = 0
		resource = Silicates
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Spodumene Excavation
		type = 0
		resource = Spodumene
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Substrate Excavation
		type = 0
		resource = Substrate
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Water Excavation
		type = 0
		resource = Water
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 2.5
		@rate *= #$/DrillCapacity$
		@ec_rate *= #$/DrillCapacity$
	}
	
	
	MODULE
	{
		name = Configure
		title = Drill
		slots = 1
		SETUP
		{
			name = Ore Extraction
			desc = Extract <b>Ore</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ore
			}
			RESOURCE
			{
				name = Ore
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Alumina Extraction
			desc = Extract <b>Alumina</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Alumina
			}
			RESOURCE
			{
				name = Alumina
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Ammonia Extraction
			desc = Extract <b>Ammonia</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
			RESOURCE
			{
				name = Ammonia
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Carbon Dioxide Extraction
			desc = Extract <b>CarbonDioxide</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
			RESOURCE
			{
				name = CarbonDioxide
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Exotic Minerals Extraction
			desc = Extract <b>ExoticMinerals</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = ExoticMinerals
			}
			RESOURCE
			{
				name = ExoticMinerals
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Gypsum Extraction
			desc = Extract <b>Gypsum</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Gypsum
			}
			RESOURCE
			{
				name = Gypsum
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Hydrate Extraction
			desc = Extract <b>Hydrates</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Hydrates
			}
			RESOURCE
			{
				name = Hydrates
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = LqdHe3 Extraction
			desc = Extract <b>LqdHe3</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdHe3
			}
			RESOURCE
			{
				name = LqdHe3
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Methane Extraction
			desc = Extract <b>Methane</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Methane
			}
			RESOURCE
			{
				name = Methane
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = MetallicOre Extraction
			desc = Extract <b>MetallicOre</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = MetallicOre
			}
			RESOURCE
			{
				name = MetallicOre
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Minerals Extraction
			desc = Extract <b>Minerals</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Minerals
			}
			RESOURCE
			{
				name = Minerals
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Monazite Extraction
			desc = Extract <b>Monazite</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Monazite
			}
			RESOURCE
			{
				name = Monazite
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Nitrogen Extraction
			desc = Extract <b>Nitrogen</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
			RESOURCE
			{
				name = Nitrogen
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Oxygen Extraction
			desc = Extract <b>Oxygen</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
			RESOURCE
			{
				name = Oxygen
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = RareMetals Extraction
			desc = Extract <b>RareMetals</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = RareMetals
			}
			RESOURCE
			{
				name = RareMetals
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Rock Extraction
			desc = Extract <b>Rock</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Rock
			}
			RESOURCE
			{
				name = Rock
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Silicates Extraction
			desc = Extract <b>Silicates</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Silicates
			}
			RESOURCE
			{
				name = Silicates
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Spodumene Extraction
			desc = Extract <b>Spodumene</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Spodumene
			}
			RESOURCE
			{
				name = Spodumene
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Substrate Extraction
			desc = Extract <b>Substrate</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Substrate
			}
			RESOURCE
			{
				name = Substrate
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Water Extraction
			desc = Extract <b>Water</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE
			{
				name = Water
				amount = 0
				maxAmount = 10
			}
		}
	}
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}
// ============================================================================
// Atmospheric Harvesters
// ============================================================================
@PART[*]:HAS[#SK_AirHarvester[True]]
{
	
	!MODULE[ModuleResourceHarvester],* {}
	
	MODULE
	{
		name = Harvester
		title = Ammonia Filter
		type = 2
		resource = Ammonia
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = ArgonGas Filter
		type = 2
		resource = ArgonGas
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = CarbonDioxide Filter
		type = 2
		resource = CarbonDioxide
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Hydrogen Filter
		type = 2
		resource = Hydrogen
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = LqdDeuterium Filter
		type = 2
		resource = LqdDeuterium
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = LqdHe3 Filter
		type = 2
		resource = LqdHe3
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Methane Filter
		type = 2
		resource = Methane
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Nitrogen Filter
		type = 2
		resource = Nitrogen
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Oxygen Filter
		type = 2
		resource = Oxygen
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Water Filter
		type = 2
		resource = Water
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Harvester
		title = XenonGas Filter
		type = 2
		resource = XenonGas
		min_abundance = 0.02
		rate = 0.00125
		ec_rate = 0.5
		@rate *= #$/AirHarvesterCapacity$
		@ec_rate *= #$/AirHarvesterCapacity$
	}
	MODULE
	{
		name = Configure
		title = Filter
		slots = 1
		
		SETUP
		{
			name = Ammonia Extraction
			desc = Extract <b>Ammonia</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
			RESOURCE
			{
				name = Ammonia
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = ArgonGas Extraction
			desc = Extract <b>ArgonGas</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = ArgonGas
			}
			RESOURCE
			{
				name = ArgonGas
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = CarbonDioxide Extraction
			desc = Extract <b>CarbonDioxide</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
			RESOURCE
			{
				name = CarbonDioxide
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Hydrogen Extraction
			desc = Extract <b>Hydrogen</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Hydrogen
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Deuterium Extraction
			desc = Extract <b>LqdDeuterium</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdHe3
			}
			RESOURCE
			{
				name = LqdDeuterium
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = LqdHe3 Extraction
			desc = Extract <b>LqdHe3</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdHe3
			}
			RESOURCE
			{
				name = LqdHe3
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Methane Extraction
			desc = Extract <b>Methane</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Methane
			}
			RESOURCE
			{
				name = Methane
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Nitrogen Extraction
			desc = Extract <b>Nitrogen</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
			RESOURCE
			{
				name = Nitrogen
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Oxygen Extraction
			desc = Extract <b>Oxygen</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
			RESOURCE
			{
				name = Oxygen
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = Water Extraction
			desc = Extract <b>Water</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE
			{
				name = Water
				amount = 0
				maxAmount = 10
			}
		}
		SETUP
		{
			name = XenonGas Extraction
			desc = Extract <b>XenonGas</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = XenonGas
			}
			RESOURCE
			{
				name = XenonGas
				amount = 0
				maxAmount = 10
			}
		}
	}
}

// ============================================================================
// Oceanic Harvesters
// ============================================================================
@PART[*]:HAS[#SK_Pump[True]]
{
	!MODULE[ModuleResourceHarvester] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleAsteroidDrill] {}

	MODULE
	{
		name = Harvester
		title = Water Pump
		type = 1
		resource = Water
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Ammonia Pump
		type = 1
		resource = LqdAmmonia
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Carbon Dioxide Pump
		type = 1
		resource = LqdCO2
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Deuterium Pump
		type = 1
		resource = LqdDeuterium
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Methane Pump
		type = 1
		resource = LqdMethane
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Nitrogen Pump
		type = 1
		resource = LqdNitrogen
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	//Make a patch so that Rational Resource LqdOxygen oceanic deposits are changed to Oxidizer
	MODULE
	{
		name = Harvester
		title = Oxygen Pump
		type = 1
		resource = Oxidizer
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Kerosene Pump
		type = 1
		resource = LiquidFuel
		min_abundance = 0.02
		rate = 0.00625
		ec_rate = 5
		@rate *= #$/PumpCapacity$
		@ec_rate *= #$/PumpCapacity$
	}

	MODULE
	{
		name = Configure
		title = Pump
		slots = 1

		SETUP
		{
			name = Water Extraction
			desc = Extract <b>Water</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE
			{
				name = Water
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Ammonia Extraction
			desc = Extract <b>LqdAmmonia</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdAmmonia
			}
			RESOURCE
			{
				name = LqdAmmonia
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Carbon Dioxide Extraction
			desc = Extract <b>LqdCO2</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdCO2
			}
			RESOURCE
			{
				name = LqdCO2
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Deuterium Extraction
			desc = Extract <b>LqdDeuterium</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdDeuterium
			}
			RESOURCE
			{
				name = LqdDeuterium
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Methane Extraction
			desc = Extract <b>LqdMethane</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdMethane
			}
			RESOURCE
			{
				name = LqdMethane
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Nitrogen Extraction
			desc = Extract <b>LqdNitrogen</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdNitrogen
			}
			RESOURCE
			{
				name = LqdNitrogen
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Oxygen Extraction
			desc = Extract <b>LqdOxygen</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxidizer
			}
			RESOURCE
			{
				name = Oxidizer
				amount = 0
				maxAmount = 45
			}
		}
		SETUP
		{
			name = Kerosene Extraction
			desc = Extract <b>Kerosene</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LiquidFuel
			}
			RESOURCE
			{
				name = LiquidFuel
				amount = 0
				maxAmount = 45
			}
		}
	}
	
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = #KERBALISM_Harvester_title//Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}
// ============================================================================
// Exosphere Harvesters
// ============================================================================
@PART[*]:HAS[#SK_ExoScoop[True]]
{
	!MODULE[ModuleResourceHarvester],* {}
	
	MODULE
	{
		name = Harvester
		title = Antimatter Exo Scoop
		type = 3
		resource = Antimatter
		min_abundance = 0.01
		rate = 0.000125
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE:NEEDS[Blueshift|FlyingSaucers]
	{
		name = Harvester
		title = Graviolium Exo Scoop
		type = 3
		resource = Graviolium
		min_abundance = 0.01
		rate = 0.000125
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Carbon Dioxide Exo Scoop
		type = 3
		resource = CarbonDioxide
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Deuterium Exo Scoop
		type = 3
		resource = LqdDeuterium
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Helium-3 Exo Scoop
		type = 3
		resource = LqdHe3
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Hydrogen Exo Scoop
		type = 3
		resource = Hydrogen
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Methane Exo Scoop
		type = 3
		resource = Methane
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Nitrogen Exo Scoop
		type = 3
		resource = Nitrogen
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Oxygen Exo Scoop
		type = 3
		resource = Oxygen
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Rock Exo Scoop
		type = 3
		resource = Rock
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	MODULE
	{
		name = Harvester
		title = Water Exo Scoop
		type = 3
		resource = Water
		min_abundance = 0.01
		rate = 0.0005
		ec_rate = 9.0
		@rate *= #$/ExoScoopCapacity$
		@ec_rate *= #$/ExoScoopCapacity$
	}
	
	MODULE
	{
		name = Configure
		title = Exosphere Scoop
		slots = 1
		@slots:NEEDS[Blueshift|FlyingSaucers] += 1
		
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings.
		}
		
		SETUP
		{
			name = Antimatter Extraction
			desc = Extract <b>Antimatter</b> from the vacuum.
			tech = plasma14
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Antimatter
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Antimatter
				amount = 0
				maxAmount = 1
			}
		}
		SETUP
		{
			name = CarbonDioxide Extraction
			desc = Extract <b>Carbon Dioxide</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = CarbonDioxide
				amount = 0
				maxAmount = 5
			}
		}
		SETUP:NEEDS[Blueshift|FlyingSaucers]
		{
			name = Graviolium Extraction
			desc = Extract <b>Graviolium</b> from the vacuum.
			tech = experimentalScience
			@tech:NEEDS[CommunityTechTree] = advOffworldMining
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Graviolium
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Graviolium
				amount = 0
				maxAmount = 1
			}
		}
		SETUP
		{
			name = LqdDeuterium Extraction
			desc = Extract <b>LqdDeuterium</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdDeuterium
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = LqdDeuterium
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = LqdHe3 Extraction
			desc = Extract <b>LqdHe3</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = LqdHe3
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = LqdHe3
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Hydrogen Extraction
			desc = Extract <b>Hydrogen</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Hydrogen
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Hydrogen
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Methane Extraction
			desc = Extract <b>Methane</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Methane
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Methane
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Nitrogen Extraction
			desc = Extract <b>Nitrogen</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Nitrogen
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Oxygen Extraction
			desc = Extract <b>Oxygen</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Oxygen
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Rock Extraction
			desc = Extract <b>Rock</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Rock
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Rock
				amount = 0
				maxAmount = 5
			}
		}
		SETUP
		{
			name = Water Extraction
			desc = Extract <b>Water</b> from the vacuum.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE:NEEDS[!RR_KerbalismYesScoopButNoTanks]
			{
				name = Water
				amount = 0
				maxAmount = 5
			}
		}
	}
}

// ============================================================================
// Greenhouses
// ============================================================================
@PART[*]:HAS[#SK_Greenhouse[True]]
{
	MODULE
	{
		name = Greenhouse
		//Please note the Greenhouse is its own process and does not work like the standard processes
		//This will however operate differently than stock Kerbalism. Harvest will be incredibly long (like hundreds of years apart), and instead food will be produced continually - this will make things a bit nicer because you won't need to come back and harvest every bajillion days
		//The stock greenhouse supports half a kerbal's daily food intake, so it should produce .5 food a day.

		crop_resource = Food                
		crop_size = 0.0000000001               //literally nothing
		crop_rate = 0.0000000001   		//about once every 1000 KSP years
		
		ec_rate = 5                       // EC/s consumed by the lamp at max intensity. Stock is 2.5, but we treat the stock greenhouse as 0.5 capacity
		@ec_rate *= #$/GreenhouseCapacity$
		
		light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1            // minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333   // maximum radiation allowed for growth in rad/s, considered after shielding is applied

		lamps = #$/lamps$                 // object with emissive texture used to represent lamp intensity graphically
		shutters = #$/shutters$                    // animation to manipulate shutters
		plants = #$/plants$                         // animation to represent plant growth graphically

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 00.00009570312
			// double the stock value
		}
		INPUT_RESOURCE
		{
			name = Water
			rate = 0.00000510416	//multiplied by 1.6 to meet SK water standards and then by two       
			@rate *= #$/GreenhouseCapacity$
		}
		INPUT_RESOURCE
		{
			name = WasteAtmosphere      // Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.00124579975        // Matched to a Kerbals WasteAtmosphere output which is 75% of required CO2 for crops according to documents linked above
			@rate *= #$/GreenhouseCapacity$
		}                             // WasteAtmosphere has the same density as CO2
		INPUT_RESOURCE
		{
			name = CarbonDioxide        //Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
            //present then it will be used in place of CO2 injection
			rate = 0.00041526657      // Remaining 25% of CO2 required.
			@rate *= #$/GreenhouseCapacity$
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vice Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.00174998595            // 200% of oxygen required by 1 crew member, based on Prototype Lunar Greenhouse design targets - multiplied by standard conversion (1.01519187846) to SK oxygen. 
			@rate *= #$/GreenhouseCapacity$
		}      		// (percentage is factor 2 larger than food)
		OUTPUT_RESOURCE
		{
			name = Food
			rate = 0.00002314814              // 100% of food required by 1 crew member for one day 
			@rate *= #$/GreenhouseCapacity$
		}  		
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = #KERBALISM_PressureControl_title//Pressure control
		capacity = 0.2143
		running = true
	}

	//Check values to ensure they make sense - should be enough for about 1 week of farming, rounded to nice numbers - anything more needs extra stuff
	RESOURCE
	{
		name = Ammonia
		amount = 29             //greenhouses combined
		maxAmount = 29
	}	

	// CarbonDioxide is provided because humans don't provide enough CO2 for their required food production
	// Both https://www.space.com/9353-lunar-greenhouse-grow-food-future-moon-colonies.html and
	// https://www.degruyter.com/downloadpdf/j/opag.2017.2.issue-1/opag-2017-0011/opag-2017-0011.pdf
	// mention CO2 injection despite being closed loop systems.
	RESOURCE
	{
		name = CarbonDioxide
		amount = 125            
		maxAmount = 125
	}

	// To support the pressure control
	RESOURCE
	{
		name = Nitrogen
		amount = 10000           
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 1.5            
		maxAmount = 1.5
	}
	
	RESOURCE
	{
		name = Food
		amount = 7             
		maxAmount = 7
	}	
	
  MODULE
  {
    name = Comfort
    bonus = plants
    desc =  There's something inherently calming about an artificial slice of nature, kept alive only by the miracles of duct-tape and kerbal engineering. Let's hope the crew doesn't think too much about it.
  }

  @tags ^= :$: comfort:
}

// ============================================================================
// Launch clamps/Generators
// ============================================================================
@PART[*]:HAS[#SK_Generator[True]]
{
	MODULE
	{
		name = ProcessController
		resource = _ECGen
		title = Power Supply
		capacity = #$/GeneratorCapacity$
		running = true
		toggle = false
	}

	!MODULE[ModuleGenerator] {}
}

// ============================================================================
// RTG
// ============================================================================
@PART[*]:HAS[#SK_RTG[True]]
{
	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = RTG
		capacity = #$/RTGCapacity$
		running = true
		toggle = false
	}

	!MODULE[ModuleGenerator] {}
	!MODULE[ModuleCoreHeat] {}
}

// ============================================================================
// Nuclear Power
// ============================================================================
@PART[*]:HAS[#SK_NuclearReactor[True]]:NEEDS[!zKerbalismSystemHeat]
{
	MODULE
	{
		name = ProcessController
		resource = _Nukereactor
		title = Nuclear Reactor
		capacity = #$/NuclearReactorCapacity$
	}

	!MODULE[FissionGenerator],* {}
	!MODULE[FissionReactor],* {}
	!MODULE[ModuleCoreHeatNoCatchup],* {}
	!MODULE[ModuleUpdateOverride],* {}
}

@PART[*]:HAS[#SK_NuclearCentrifuge[True]]:NEEDS[!zKerbalismSystemHeat]
{
	MODULE
	{
		name = ProcessController
		resource = _Centrifuge
		title = Nuclear Centrifuge
		capacity = #$/NuclearCentrifugeCapacity$
	}
	
	MODULE
	{
		name = ProcessController
		resource = _Reprocessor
		title = Nuclear Reprocessor
		capacity = #$/NuclearCentrifugeCapacity$
	}

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleOverheatDisplay],* {}
	!MODULE[ModuleCoreHeat],* {}
}

// ============================================================================
// Habitats
// ============================================================================

// ============================================================================
// Patches for Reliability and Science
// ============================================================================
@PART:HAS[@MODULE[Reliability]]:FINAL
{
	@MODULE[Reliability]
	{
		@mtbf *= 1.71325288247 // in seconds
	}
}

@EXPERIMENT_DEFINITION:HAS[#experimentLength[<4601772],#experimentLength[>21599],@KERBALISM_EXPERIMENT:HAS[~SampleMass]]:NEEDS[FeatureScience]:FINAL
{
	@dataScale *= 2
}

@EXPERIMENT_DEFINITION:HAS[#experimentLength[>4601772],@KERBALISM_EXPERIMENT:HAS[~SampleMass]]:NEEDS[FeatureScience]:FINAL
{
	@dataScale *= 1.71325288247
}

@PART:HAS[@MODULE[Experiment]]:FINAL
{
	@MODULE[Experiment]:HAS[#experimentLength[<4601772],#experimentLength[>21599],#sample_collecting[true]],*
	{
		@data_rate /= 2
	}

	@MODULE[Experiment]:HAS[#experimentLength[<4601772],#experimentLength[>21599],#sample_collecting[true]],*
	{
		@data_rate /= 2
	}
}

//BDB Film-Based Experiments are special
@PART:HAS[@MODULE[Experiment]:HAS[#experiment_id[sk_orbitalReconnaissanceCamera]]]:FINAL
{
	@MODULE[Experiment]:HAS[#experiment_id[sk_orbitalReconnaissanceCamera]],*
	{
		@resources = Film@0.00002314814
	}
}

@PART:HAS[@MODULE[Experiment]:HAS[#experiment_id[bd_mapping]]]:FINAL
{
	@MODULE[Experiment]:HAS[#experiment_id[bd_mapping]],*
	{
		@resources = Film@0.0000005144
	}
}

@PART:HAS[@MODULE[Experiment]:HAS[#experiment_id[bd_surveillance]]]:FINAL
{
	@MODULE[Experiment]:HAS[#experiment_id[bd_surveillance]],*
	{
		@resources = Film@0.000000126839168
	}
}

// ============================================================================
// Pseudo-resources used by processes
// ============================================================================
RESOURCE_DEFINITION
{
  name = _BasicLiOHScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AdvancedLiOHScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _BasicRegenerativeScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AdvancedRegenerativeScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _H2O2FuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _KeroloxFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydroloxFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MethaloxFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HypergolicFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonMonoxideFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineOxygenFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Kerolox
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Kerosene
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Hydrolox
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Methalox
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Hypergolic
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Aerozine50
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _NitrogenTetroxide
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineA
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineB
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AmmoniaBrewer
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SabatierProcess
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HaberProcess
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SelectiveCatalyticOxidation
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonMonoxideA
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonMonoxideB
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SolidOxideElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MoltenRegolithElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MoltenRegolithElectrolysisRock
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AluminaSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonExtractor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonFuser
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _CarbonDioxideSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydratesSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MonaziteSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SilicatesSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SpodumeneSplitter
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _DeuteriumProduction
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _GlykerolBrewer
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeAmmonia
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeCarbonDioxide
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeCarbonMonoxide
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeHydrogen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeMethane
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeNitrogen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FreezeOxygen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawAmmonia
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawCarbonDioxide
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawCarbonMonoxide
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawHydrogen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawMethane
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawNitrogen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ThawOxygen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AirPump
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteProcessor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _ECGen
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Haber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteIncinerator
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteCompressor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Centrifuge
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Reprocessor
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Nukereactor
	density = 0.0
	isVisible = false
}

// sickbay
RESOURCE_DEFINITION
{
  name = _SickbayRDU
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayTV
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayTherapy
  density = 0.0
  isVisible = false
}


RESOURCE_DEFINITION
{
  name = _SickbayShower
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayLaundry
  density = 0.0
  isVisible = false
}

// Remove pressure controlmodules from all habitats that have a max_pressure set
@PART[*]:HAS[@MODULE[Habitat]:HAS[#max_pressure]]:NEEDS[ProfileSkyhawk]:AFTER[zzzKerbalismSkyhawk]
{
	!MODULE[ProcessController]:HAS[#resource[_PressureControl]] {}
	@MODULE[Configure]
	{
		!SETUP[Pressure?Control] {}
	}
}
